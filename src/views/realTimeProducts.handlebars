<h1> Real time products</h1>

<div>
    <form id="FormNewProduct" action="http://localhost:8080/api/products" method="post">
        <div class="mb-3">
            <label for="exampleFormControlInput1" class="form-label">Nombre del producto</label>
            <input type="text" name="title" class="form-control" id="exampleFormControlInput1"
                placeholder="Nombre del producto">

            <label for="exampleFormControlInput1" class="form-label">Descripción del producto</label>
            <input type="text" name="description" class="form-control" id="exampleFormControlInput1">

            <label for="exampleFormControlInput1" class="form-label">Categoría</label>
            <input type="text" name="category" class="form-control" id="exampleFormControlInput1">

            <label for="exampleFormControlInput1" class="form-label">Precio</label>
            <input type="text" name="price" class="form-control" id="exampleFormControlInput1"
                placeholder="Precio del producto">

            <label for="exampleFormControlInput1" class="form-label">Imagen del producto</label>
            <input type="text" name="thumbnail" class="form-control" id="exampleFormControlInput1"
                placeholder="URL de la imagen del producto">

            <label for="exampleFormControlInput1" class="form-label">Código</label>
            <input type="text" name="code" class="form-control" id="exampleFormControlInput1"
                placeholder="Código del producto">

            <label for="exampleFormControlInput1" class="form-label">Stock</label>
            <input type="text" name="stock" class="form-control" id="exampleFormControlInput1"
                placeholder="Cantidad de unidades disponibles en invetario">

            <label for="exampleFormControlInput1" class="form-label">Disponible</label>
            <input type="text" name="status" class="form-control" id="exampleFormControlInput1"
                placeholder="Indica si el producto esta disponible, ingrese 'Si' o 'No'">

            <button type="submit"> Enviar </button>
        </div>
    </form>
</div>


<div class="container">
    {{#each products}}
<div class="card" style="width: 18rem;">
        <img src="{{this.thumbnail}}" class="card-img-top" alt="...">
        <div class="card-body">
            <h5 class="card-title">{{this.title}}</h5>
            <h6 class="card-subtitle mb-2 text-body-secondary">{{this.category}}</h6>
            <p class="card-text">{{this.description}}</p>
            <h6 class="card-subtitle mb-2 text-body-secondary">{{this.price}}</h6>
            <a href="#" class="btn btn-primary">Comprar</a>
        </div>
    </div>
{{/each}}
</div>




<script src="/socket.io/socket.io.js"></script>
<script>
//Websocket desde el cliente
    const socket = io();

    const FormNewProduct = document.getElementById("FormNewProduct");

    FormNewProduct.addEventListener("submit", (event) => {
        event.preventDefault();
    });

    document.getElementById('product-form').addEventListener('submit', (e) => {
    e.preventDefault();

    const newProduct = {
        title: document.getElementById('title').value,
        description: document.getElementById('description').value,
        category: document.getElementById('category').value,
        price: parseFloat(document.getElementById('price').value),
        thumbnail: document.getElementById('thumbnail')?.value || null,
        code: document.getElementById('code').value ,
        stock: parseInt(document.getElementById('stock').value),
        status: document.getElementById('status').value === 'true',        
    };
    

    socket.emit('new Product', newProduct);
    e.target.reset();
});



</script>

